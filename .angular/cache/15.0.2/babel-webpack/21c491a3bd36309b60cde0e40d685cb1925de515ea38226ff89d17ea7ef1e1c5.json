{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { BehaviorSubject, combineLatest, map, mergeMap } from 'rxjs';\nimport { debounce } from 'src/app/utils';\nimport { API_URL, IMAGE_API_URL } from 'src/config';\nlet HomeComponent = class HomeComponent {\n  constructor(moviesService, showsService, router) {\n    this.moviesService = moviesService;\n    this.showsService = showsService;\n    this.router = router;\n    this.API_URL = API_URL;\n    this.IMAGE_API_URL = IMAGE_API_URL;\n    this.mode = initMode();\n    this.searchQuery = new BehaviorSubject('');\n    this.content = combineLatest([this.mode, this.searchQuery]).pipe(mergeMap(([mode, query]) => {\n      return query?.length > 2 ? (mode === 'movies' ? this.moviesService.searchMovies(query) : this.showsService.searchShows(query)).pipe(map(data => data?.results)) : (mode === 'movies' ? this.moviesService.getTopRated() : this.showsService.getTopRated()).pipe(map(data => data?.results));\n    }));\n    this.setMode = val => {\n      this.mode.next(val);\n    };\n    this.onSearch = event => {\n      const query = event?.target?.value || '';\n      this.searchQuery.next(query);\n    };\n    this.navigate = (id, mode) => {\n      localStorage.setItem('storedMode', this.mode.getValue());\n      localStorage.setItem('storedInput', this.searchQuery.getValue());\n      this.router.navigateByUrl('/article-details/' + mode + '/' + id);\n    };\n    this.debouncedSearch = debounce(this.onSearch, 1000);\n  }\n  ngOnInit() {}\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.sass']\n})], HomeComponent);\nexport { HomeComponent };\nfunction initMode() {\n  return localStorage.getItem('storedMode') ? new BehaviorSubject(localStorage.getItem('storedMode')) : new BehaviorSubject('shows');\n}\nfunction initSearchQuery() {\n  if (localStorage.getItem('storedInput') != null) this.searchQuery.next(localStorage.getItem('storedInput'));else this.searchQuery = new BehaviorSubject('');\n}","map":{"version":3,"mappings":"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","names":["Component","BehaviorSubject","combineLatest","map","mergeMap","debounce","API_URL","IMAGE_API_URL","HomeComponent","constructor","moviesService","showsService","router","initMode","mode","searchQuery","pipe","query","length","searchMovies","searchShows","data","results","getTopRated","val","next","event","target","value","id","localStorage","setItem","getValue","navigateByUrl","onSearch","ngOnInit","selector","templateUrl","styleUrls","getItem","initSearchQuery"],"sourceRoot":"","sources":["C:\\Users\\nejla\\Desktop\\b\\src\\app\\screens\\home\\home.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, combineLatest, map, merge, mergeMap } from 'rxjs';\nimport { MoviesService } from 'src/app/services/movies.service';\nimport { ShowsService } from 'src/app/services/shows.service';\nimport { debounce } from 'src/app/utils';\nimport { API_URL, IMAGE_API_URL } from 'src/config';\n\ntype ContentMode = 'movies' | 'shows';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.sass'],\n})\nexport class HomeComponent implements OnInit {\n  API_URL = API_URL;\n  IMAGE_API_URL = IMAGE_API_URL;\n\n  mode = initMode();\n  private searchQuery = new BehaviorSubject('');\n\n  content = combineLatest([this.mode, this.searchQuery]).pipe(\n    mergeMap(([mode, query]) => {\n      return query?.length > 2 ? (\n        mode === 'movies' ? this.moviesService.searchMovies(query) : this.showsService.searchShows(query)\n      ).pipe(map((data: any) => data?.results))\n      : (\n        mode === 'movies' ?  this.moviesService.getTopRated() :  this.showsService.getTopRated()\n      ).pipe(map((data: any) => data?.results));\n    }) \n  );\n\n  constructor(\n    private moviesService: MoviesService,\n    private showsService: ShowsService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n  }\n\n  setMode = (val: ContentMode) => {\n    this.mode.next(val);\n  }\n\n  onSearch = (event: any) => {\n    const query: string = event?.target?.value || ''\n    this.searchQuery.next(query);\n  }\n\n  navigate = (id: any, mode: string) => {\n    localStorage.setItem('storedMode', this.mode.getValue());\n    localStorage.setItem('storedInput', this.searchQuery.getValue());\n    this.router.navigateByUrl('/article-details/' + mode + '/' + id);\n  }\n\n  debouncedSearch = debounce(this.onSearch, 1000)\n}\n\nfunction initMode() {\n  return localStorage.getItem('storedMode') ? new BehaviorSubject(localStorage.getItem('storedMode') as ContentMode) : new BehaviorSubject('shows' as ContentMode);\n}\n\nfunction initSearchQuery(this: any) {\n  if(localStorage.getItem('storedInput') != null) this.searchQuery.next(localStorage.getItem('storedInput')!);\n  else this.searchQuery = new BehaviorSubject('');\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}