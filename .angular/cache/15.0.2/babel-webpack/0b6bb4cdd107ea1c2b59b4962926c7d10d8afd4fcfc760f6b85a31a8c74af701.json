{"ast":null,"code":"import { BehaviorSubject, combineLatest, map, mergeMap } from 'rxjs';\nimport { API_URL, IMAGE_API_URL } from 'src/config';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/movies.service\";\nimport * as i2 from \"src/app/services/shows.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../components/button/button.component\";\nimport * as i5 from \"../../components/card/card.component\";\nimport * as i6 from \"../../components/search/search.component\";\nfunction HomeComponent_card_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"card\", 7);\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate(\"title\", item_r1.title);\n    i0.ɵɵpropertyInterpolate(\"imageURL\", ctx_r0.IMAGE_API_URL + item_r1.poster_path);\n  }\n}\nexport class HomeComponent {\n  constructor(moviesService, showsService) {\n    this.moviesService = moviesService;\n    this.showsService = showsService;\n    this.API_URL = API_URL;\n    this.IMAGE_API_URL = IMAGE_API_URL;\n    this.mode = new BehaviorSubject('movies');\n    this.content = combineLatest([this.mode]).pipe(mergeMap(([mode]) => {\n      return (mode === 'movies' ? this.moviesService.getTopRated() : this.showsService.getTopRated()).pipe(map(data => data?.results));\n    }));\n  }\n  ngOnInit() {}\n  static #_ = this.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.MoviesService), i0.ɵɵdirectiveInject(i2.ShowsService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 11,\n    vars: 3,\n    consts: [[1, \"screen-container\", \"home-screen\"], [1, \"home-screen__buttons\"], [\"icon\", \"fa fa-film\"], [\"icon\", \"fa fa-desktop\"], [1, \"home-screen__search-bar\"], [1, \"home-screen__cards-container\"], [3, \"title\", \"imageURL\", 4, \"ngFor\", \"ngForOf\"], [3, \"title\", \"imageURL\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"custom-button\", 2);\n        i0.ɵɵtext(3, \"Movies\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"custom-button\", 3);\n        i0.ɵɵtext(5, \"TV Shows\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵelement(7, \"search\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 5);\n        i0.ɵɵtemplate(9, HomeComponent_card_9_Template, 1, 2, \"card\", 6);\n        i0.ɵɵpipe(10, \"async\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(10, 1, ctx.content));\n      }\n    },\n    dependencies: [i3.NgForOf, i4.ButtonComponent, i5.CardComponent, i6.SearchComponent, i3.AsyncPipe],\n    styles: [\".home-screen[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: flex-start;\\n  gap: 20px;\\n}\\n\\n.home-screen__cards-container[_ngcontent-%COMP%] {\\n  width: 100%;\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: space-around;\\n}\\n/*# sourceURL=webpack://./src/app/screens/home/home.component.sass */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2NyZWVucy9ob21lL2hvbWUuY29tcG9uZW50LnNhc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSx1QkFBQTtFQUNBLFNBQUE7QUFDRjs7QUFDQTtFQUNFLFdBQUE7RUFDQSxhQUFBO0VBQ0EsZUFBQTtFQUNBLDZCQUFBO0FBRUYiLCJzb3VyY2VzQ29udGVudCI6WyIuaG9tZS1zY3JlZW4ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgZ2FwOiAyMHB4O1xufVxuXG4uaG9tZS1zY3JlZW5fX2NhcmRzLWNvbnRhaW5lciB7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,eAAe,EAAEC,aAAa,EAAEC,GAAG,EAASC,QAAQ,QAAQ,MAAM;AAG3E,SAASC,OAAO,EAAEC,aAAa,QAAQ,YAAY;;;;;;;;;;ICK3CC,0BAIQ;;;;;IAFJA,gDAAsB;IACtBA,gFAA+C;;;ADC3D,OAAM,MAAOC,aAAa;EAWxBC,YACUC,aAA4B,EAC5BC,YAA0B;IAD1B,kBAAa,GAAbD,aAAa;IACb,iBAAY,GAAZC,YAAY;IAZtB,YAAO,GAAGN,OAAO;IACjB,kBAAa,GAAGC,aAAa;IAE7B,SAAI,GAAG,IAAIL,eAAe,CAAC,QAAuB,CAAC;IACnD,YAAO,GAAGC,aAAa,CAAC,CAAC,IAAI,CAACU,IAAI,CAAC,CAAC,CAACC,IAAI,CACvCT,QAAQ,CAAC,CAAC,CAACQ,IAAI,CAAC,KAAI;MAClB,OAAO,CAAEA,IAAI,KAAK,QAAQ,GAAK,IAAI,CAACF,aAAa,CAACI,WAAW,EAAE,GAAI,IAAI,CAACH,YAAY,CAACG,WAAW,EAAE,EAAED,IAAI,CAACV,GAAG,CAAEY,IAAS,IAAKA,IAAI,EAAEC,OAAO,CAAC,CAAC;IAC7I,CAAC,CAAC,CACH;EAKE;EAEHC,QAAQ,IAAU;EAAC;qBAhBRT,aAAa;EAAA;EAAA;UAAbA,aAAa;IAAAU;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCb1Bf,8BAA0C;QAEDA,sBAAM;QAAAA,iBAAgB;QACvDA,wCAAoC;QAAAA,wBAAQ;QAAAA,iBAAgB;QAEhEA,8BAAqC;QACjCA,yBAAiB;QACrBA,iBAAM;QACNA,8BAA0C;QACtCA,gEAIQ;;QACZA,iBAAM;;;QAJmBA,eAAoB;QAApBA,4DAAoB","names":["BehaviorSubject","combineLatest","map","mergeMap","API_URL","IMAGE_API_URL","i0","HomeComponent","constructor","moviesService","showsService","mode","pipe","getTopRated","data","results","ngOnInit","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\nejla\\Desktop\\b\\src\\app\\screens\\home\\home.component.ts","C:\\Users\\nejla\\Desktop\\b\\src\\app\\screens\\home\\home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject, combineLatest, map, merge, mergeMap } from 'rxjs';\nimport { MoviesService } from 'src/app/services/movies.service';\nimport { ShowsService } from 'src/app/services/shows.service';\nimport { API_URL, IMAGE_API_URL } from 'src/config';\n\ntype ContentMode = 'movies' | 'shows';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.sass'],\n})\nexport class HomeComponent implements OnInit {\n  API_URL = API_URL;\n  IMAGE_API_URL = IMAGE_API_URL;\n\n  mode = new BehaviorSubject('movies' as ContentMode);\n  content = combineLatest([this.mode]).pipe(\n    mergeMap(([mode]) => {\n      return ((mode === 'movies') ?  this.moviesService.getTopRated() :  this.showsService.getTopRated()).pipe(map((data: any) => data?.results));\n    }) \n  );\n\n  constructor(\n    private moviesService: MoviesService,\n    private showsService: ShowsService\n  ) {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"screen-container home-screen\">\n    <div class=\"home-screen__buttons\">\n        <custom-button icon=\"fa fa-film\">Movies</custom-button>\n        <custom-button icon=\"fa fa-desktop\">TV Shows</custom-button>\n    </div>\n    <div class=\"home-screen__search-bar\">\n        <search></search>\n    </div>\n    <div class=\"home-screen__cards-container\">\n        <card\n            *ngFor=\"let item of (content | async)\"\n            title=\"{{item.title}}\"\n            imageURL=\"{{IMAGE_API_URL + item.poster_path}}\"\n        ></card>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}